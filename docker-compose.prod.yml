services:
  frontend-prod:
    image: adalmia/sensai-frontend:latest
    ports:
      - "8501:3000"
    depends_on:
      backend-prod:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sensai-network-prod

  backend-prod:
    image: adalmia/sensai-ai:latest
    working_dir: /src
    command: bash -c "python /src/startup.py && uvicorn api.main:app --host 0.0.0.0 --port 8001"
    volumes:
      - /appdata_prod:/appdata
    ports:
      - "8001:8001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - sensai-network-prod

  public-api-prod:
    image: adalmia/sensai-ai:latest
    working_dir: /src
    command: bash -c "python /src/startup.py && uvicorn api.public:app --host 0.0.0.0 --port 8001"
    volumes:
      - /appdata_prod:/appdata
    restart: unless-stopped
    ports:
      - "8004:8001"

  cron-prod:
    image: adalmia/sensai-ai:latest
    working_dir: /src
    command: sh -c "apt-get update && apt-get install -y cron && echo '55 23 * * * cd /src && /usr/local/bin/python -c \"from api.cron import send_usage_summary_stats; import asyncio; asyncio.run(send_usage_summary_stats())\" >> /appdata/logs/backend-cron.log 2>&1' >> /src/sensai-cron && echo '45 4 * * * cd /src && /usr/local/bin/python -c \"from api.utils.phoenix import save_daily_traces; save_daily_traces()\" >> /appdata/logs/backend-cron.log 2>&1' >> /src/sensai-cron && echo '0 10 * * * cd /src && /usr/local/bin/python -c \"from api.bq.cron import run_all_syncs; import asyncio; asyncio.run(run_all_syncs())\" >> /appdata/logs/backend-cron.log 2>&1' >> /src/sensai-cron && crontab /src/sensai-cron && cron -f"
    volumes:
      - /appdata_prod:/appdata
    environment:
      - TZ=Asia/Kolkata
    restart: unless-stopped

  phoenix:
    image: arizephoenix/phoenix:latest # Must be greater than 4.0 version to work
    ports:
      - 6006:6006 # PHOENIX_PORT
      - 4317:4317 # PHOENIX_GRPC_PORT
    environment:
      - PHOENIX_WORKING_DIR=/mnt/data
      - PHOENIX_ENABLE_AUTH=True
      - PHOENIX_SECRET=${PHOENIX_SECRET}
    restart: unless-stopped
    volumes:
      - phoenix_data:/mnt/data # PHOENIX_WORKING_DIR

networks:
  sensai-network-prod:
    driver: bridge

volumes:
  phoenix_data:
    driver: local
